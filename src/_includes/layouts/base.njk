{%- from "macros/svg-definitions.njk" import svgDefinitions -%}

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ renderData.title or title or metadata.title }}</title>
    {#
      Per recommendation from: https://evilmartians.com/chronicles/how-to-favicon-in-2021-six-files-that-fit-most-needs
      favicon.ico is accessible at the root, as set up in the eleventy config
    #}
    <link rel="icon" href="/favicon.ico" sizes="32x32">
    <link rel="icon" href="/assets/favicon/favicon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/assets/favicon/apple-touch-icon.png">
    <meta name="Description" content="{{ renderData.description or description or metadata.description }}">
    <link rel="stylesheet" href="/assets/css/reset.css">
    <link rel="stylesheet" href="/assets/css/main.css">
    <link rel="stylesheet" href="/assets/css/home.css">
    <link rel="stylesheet" href="/assets/css/contributors.css">
    <link rel="stylesheet" href="/assets/css/blog.css">
    <link rel="stylesheet" href="/assets/css/post-list.css">
    <link rel="stylesheet" href="/assets/css/richtext.css">
    <link rel="stylesheet" href="/assets/css/prism-base16-monokai.dark.css">
    <link rel="alternate" href="{{ metadata.feed.path }}" type="application/rss+xml" title="{{ metadata.title }}">
  </head>
  <body>
    {% if page.svgIds -%}
      {{ svgDefinitions(page.svgIds) }}
    {%- endif -%}
    <div class='content-wrapper'>
      <header {% if headerBackground %}class="background-circle {{ headerBackground }}"{% endif %}>
        {% if headerBackground %}
          <div class="circle-container"></div>
        {% endif %}
        <div class="navi">
          <nav class="nav" role="navigation" aria-label="Main">
            <ul class="nav-links">
              <li class="nav-item logo" >
                <a href="/">Deven</a>
              </li>
              <li class="nav-item subnav" id="subnav" >
                <button class="subnav-toggle" id="subnav-toggle" aria-expanded="false" onclick="toggleSubnav()">Discover<div class="subnav-chevron"></div>
                </button>
                <div class="subnav-container">
                  <ul>
                    <li class="subnav-item">
                      <a href="/#about-deven">About</a>
                    </li>
                    <li class="subnav-item">
                      <a href="/#tools">Tools</a>
                    </li>
                    <li class="subnav-item">
                      <a href="/#team">Team</a>
                    </li>
                    <li class="subnav-item">
                      <a href="/#latest-news">Latest News</a>
                    </li>
                  </ul>
                  <button class="close-btn" onclick="closeSubnav()"><span class="visually-hidden">Close Discover menu</span></button>
                </div>
              </li>
              {%- for nav in collections.navItems | sort(attribute="data.navOrder") -%}
                <li class="nav-item{% if nav.url == page.url %} nav-item-active{% endif %}" {% if nav.url == page.url %} aria-current="page"{% endif %}>
                  <a href="{{ nav.url }}">{{ nav.data.title }}</a>
                </li>
              {%- endfor -%}
            </ul>
          </nav>
        </div>
        <div class="header-content">
          {% slot header %}<h1>{{title}}</h1>{% endslot %}
        </div>
      </header>
      <main{% if templateClass %} class="{{ templateClass }}"{% endif %}>
        {{ content | safe }}
      </main>
      <footer class="footer-content">
        <p id="copyright"></p>
        <a href='/imprint'>Imprint</a>
      </footer>
    </div>
    <script>
      document
        .getElementById('copyright')
        .innerHTML = `&copy DEVEN ${new Date().getFullYear()}. All rights reserved.`;

      // Subnav handling
      //
      // Since we have to update aria-expanded anyway, we can use it as our
      // source of truth for the state (in JS and CSS).

      document.addEventListener('click', function (event) {
        // listen to outside clicks (only) to close subnav automatically
        const isOutside = !document.getElementById("subnav").contains(event.target);
        const subnavToggle = document.getElementById('subnav-toggle');

        if (isOutside && subnavToggle.getAttribute("aria-expanded") !== "false") {
          subnavToggle.setAttribute("aria-expanded", "false");
        }
      });

      function toggleSubnav() {
        const subnavToggle = document.getElementById('subnav-toggle');

        if (subnavToggle.getAttribute("aria-expanded") === "false") {
          subnavToggle.setAttribute("aria-expanded", "true");
        } else {
          subnavToggle.setAttribute("aria-expanded", "false");
        }
      }

      function closeSubnav() {
        document
          .getElementById('subnav-toggle')
          .setAttribute("aria-expanded", "false");
      }
    </script>

  </body>
</html>